{
	"compiler": {
		"version": "0.8.30+commit.73712a01"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"type": "constructor",
				"inputs": [
					{
						"name": "_echoTokenAddress",
						"type": "address",
						"internalType": "address"
					},
					{
						"name": "_stakeAmount",
						"type": "uint256",
						"internalType": "uint256"
					}
				],
				"stateMutability": "nonpayable"
			},
			{
				"type": "function",
				"name": "contributionScores",
				"inputs": [
					{
						"name": "",
						"type": "address",
						"internalType": "address"
					}
				],
				"outputs": [
					{
						"name": "",
						"type": "uint256",
						"internalType": "uint256"
					}
				],
				"stateMutability": "view"
			},
			{
				"type": "function",
				"name": "deviceIdToOwner",
				"inputs": [
					{
						"name": "",
						"type": "string",
						"internalType": "string"
					}
				],
				"outputs": [
					{
						"name": "",
						"type": "address",
						"internalType": "address"
					}
				],
				"stateMutability": "view"
			},
			{
				"type": "function",
				"name": "deviceReadings",
				"inputs": [
					{
						"name": "",
						"type": "string",
						"internalType": "string"
					},
					{
						"name": "",
						"type": "uint256",
						"internalType": "uint256"
					}
				],
				"outputs": [
					{
						"name": "ipfsCID",
						"type": "string",
						"internalType": "string"
					},
					{
						"name": "timestamp",
						"type": "uint256",
						"internalType": "uint256"
					}
				],
				"stateMutability": "view"
			},
			{
				"type": "function",
				"name": "echoToken",
				"inputs": [],
				"outputs": [
					{
						"name": "",
						"type": "address",
						"internalType": "contract IEchoToken"
					}
				],
				"stateMutability": "view"
			},
			{
				"type": "function",
				"name": "owner",
				"inputs": [],
				"outputs": [
					{
						"name": "",
						"type": "address",
						"internalType": "address"
					}
				],
				"stateMutability": "view"
			},
			{
				"type": "function",
				"name": "registerSensor",
				"inputs": [
					{
						"name": "_deviceId",
						"type": "string",
						"internalType": "string"
					}
				],
				"outputs": [],
				"stateMutability": "nonpayable"
			},
			{
				"type": "function",
				"name": "sensors",
				"inputs": [
					{
						"name": "",
						"type": "address",
						"internalType": "address"
					}
				],
				"outputs": [
					{
						"name": "deviceOwner",
						"type": "address",
						"internalType": "address"
					},
					{
						"name": "isVerified",
						"type": "bool",
						"internalType": "bool"
					},
					{
						"name": "deviceId",
						"type": "string",
						"internalType": "string"
					}
				],
				"stateMutability": "view"
			},
			{
				"type": "function",
				"name": "slashStake",
				"inputs": [
					{
						"name": "_deviceId",
						"type": "string",
						"internalType": "string"
					}
				],
				"outputs": [],
				"stateMutability": "nonpayable"
			},
			{
				"type": "function",
				"name": "stakeAmount",
				"inputs": [],
				"outputs": [
					{
						"name": "",
						"type": "uint256",
						"internalType": "uint256"
					}
				],
				"stateMutability": "view"
			},
			{
				"type": "function",
				"name": "stakes",
				"inputs": [
					{
						"name": "",
						"type": "address",
						"internalType": "address"
					}
				],
				"outputs": [
					{
						"name": "",
						"type": "uint256",
						"internalType": "uint256"
					}
				],
				"stateMutability": "view"
			},
			{
				"type": "function",
				"name": "submitReading",
				"inputs": [
					{
						"name": "_deviceId",
						"type": "string",
						"internalType": "string"
					},
					{
						"name": "ipfsCID",
						"type": "string",
						"internalType": "string"
					}
				],
				"outputs": [],
				"stateMutability": "nonpayable"
			},
			{
				"type": "function",
				"name": "unstakeAndDeregister",
				"inputs": [],
				"outputs": [],
				"stateMutability": "nonpayable"
			},
			{
				"type": "event",
				"name": "ReadingSubmitted",
				"inputs": [
					{
						"name": "owner",
						"type": "address",
						"indexed": true,
						"internalType": "address"
					},
					{
						"name": "ipfsCID",
						"type": "string",
						"indexed": false,
						"internalType": "string"
					},
					{
						"name": "rewardAmount",
						"type": "uint256",
						"indexed": false,
						"internalType": "uint256"
					}
				],
				"anonymous": false
			},
			{
				"type": "event",
				"name": "RewardMinted",
				"inputs": [
					{
						"name": "to",
						"type": "address",
						"indexed": true,
						"internalType": "address"
					},
					{
						"name": "amount",
						"type": "uint256",
						"indexed": false,
						"internalType": "uint256"
					}
				],
				"anonymous": false
			},
			{
				"type": "event",
				"name": "SensorDeregistered",
				"inputs": [
					{
						"name": "owner",
						"type": "address",
						"indexed": true,
						"internalType": "address"
					}
				],
				"anonymous": false
			},
			{
				"type": "event",
				"name": "SensorRegistered",
				"inputs": [
					{
						"name": "owner",
						"type": "address",
						"indexed": true,
						"internalType": "address"
					},
					{
						"name": "deviceId",
						"type": "string",
						"indexed": false,
						"internalType": "string"
					},
					{
						"name": "stakeAmount",
						"type": "uint256",
						"indexed": false,
						"internalType": "uint256"
					}
				],
				"anonymous": false
			},
			{
				"type": "event",
				"name": "StakeSlashed",
				"inputs": [
					{
						"name": "sensorAddress",
						"type": "address",
						"indexed": true,
						"internalType": "address"
					},
					{
						"name": "userStake",
						"type": "uint256",
						"indexed": false,
						"internalType": "uint256"
					}
				],
				"anonymous": false
			},
			{
				"type": "error",
				"name": "AlreadyRegistered",
				"inputs": []
			},
			{
				"type": "error",
				"name": "DeviceIdAlreadyUsed",
				"inputs": []
			},
			{
				"type": "error",
				"name": "DeviceIdNotFound",
				"inputs": []
			},
			{
				"type": "error",
				"name": "IncorrectStakeAmount",
				"inputs": []
			},
			{
				"type": "error",
				"name": "NotRegistered",
				"inputs": []
			},
			{
				"type": "error",
				"name": "OnlyOwner",
				"inputs": []
			},
			{
				"type": "error",
				"name": "ReentrancyGuardReentrantCall",
				"inputs": []
			},
			{
				"type": "error",
				"name": "TransferFailed",
				"inputs": []
			}
		],
		"devdoc": {
			"errors": {
				"ReentrancyGuardReentrantCall()": [
					{
						"details": "Unauthorized reentrant call."
					}
				]
			},
			"kind": "dev",
			"methods": {
				"registerSensor(string)": {
					"details": "Registers a sensor. The user must first approve this contract to spend `stakeAmount` of their ECHO tokens."
				},
				"slashStake(string)": {
					"details": "Slash the stake of a sensor and send it to the contract owner. Can only be called by the contract owner (server). The server identifies a faulty device by its ID."
				},
				"submitReading(string,string)": {
					"details": "The reading is stored on-chain, and the device owner is rewarded with ECHO tokens.",
					"params": {
						"_deviceId": "The unique identifier of the device submitting the reading.",
						"ipfsCID": "The IPFS CID pointing to the reading data stored off-chain. Requirements: - The device ID must be registered and associated with a sensor owner. - The function rewards the sensor owner, not necessarily the caller. Emits a {ReadingSubmitted} event with details of the submission."
					}
				},
				"unstakeAndDeregister()": {
					"details": "Allows a sensor owner to unstake their tokens and leave the network."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"contributionScores(address)": {
					"notice": "A public mapping to track the contribution score of each sensor owner. The Uniswap v4 hook will read this value to determine the swap fee."
				},
				"submitReading(string,string)": {
					"notice": "Submits a new data reading for a specific device."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"src/MainContract.sol": "MainContract"
		},
		"evmVersion": "prague",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2",
			"license": "MIT",
			"urls": [
				"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303",
				"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV"
			]
		},
		"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
			"keccak256": "0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3",
			"license": "MIT",
			"urls": [
				"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a",
				"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA"
			]
		},
		"src/MainContract.sol": {
			"keccak256": "0x772a7b024c7f106ada8e51eba6967ce9f18a8727584b31d676cdb80d4f02d735",
			"license": "MIT",
			"urls": [
				"bzz-raw://15c2708e5a5256ee93ca0ac7601cbea0abb6e96ab794d0081274cf4199d8d42a",
				"dweb:/ipfs/QmeTYDfYLE9zeZG6CE6SHidMGhnrJYLaFPBRQAymsNWtxz"
			]
		}
	},
	"version": 1
}